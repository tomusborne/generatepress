<?php
/**
 * This file handles CSS variables in the theme.
 *
 * @package GeneratePress
 */

if ( ! defined( 'ABSPATH' ) ) {
	exit; // Exit if accessed directly.
}

/**
 * Handles all CSS variables generated by our options.
 */
class GeneratePress_CSS_Variables extends GeneratePress_Singleton {
	/**
	 * Initialize our variables.
	 */
	public function init() {
		add_action( 'wp_enqueue_scripts', [ 'GeneratePress_CSS_Variables', 'enqueue_css' ], 50 );
	}

	/**
	 * Get all of our variable data.
	 */
	public static function get_variable_data() {
		return array_merge_recursive(
			GeneratePress_Colors::build_global_color_variables(),
			GeneratePress_Typography::build_css_variables(),
			GeneratePress_Colors::build_color_variables(),
		);
	}

	/**
	 * Enqueue our CSS on the frontend.
	 */
	public static function enqueue_css() {
		$css = self::get_css();

		if ( ! $css ) {
			return;
		}

		wp_add_inline_style(
			'generate-style',
			$css
		);
	}

	/**
	 * Takes the array of CSS variables and turns it into a CSS string.
	 */
	public static function get_css() {
		$output = '';
		$variables = self::get_variable_data();

		$css = new GeneratePress_CSS();

		$css->set_selector( ':root' );

		foreach ( (array) $variables['main'] as $property => $value ) {
			$css->add_property( '--' . $property, $value );
		}

		if ( isset( $variables['tablet'] ) ) {
			$css->start_media_query( generate_get_media_query( 'tablet' ) );

			$css->set_selector( ':root' );

			foreach ( (array) $variables['tablet'] as $property => $value ) {
				$css->add_property( '--' . $property, $value );
			}

			$css->stop_media_query();
		}

		if ( isset( $variables['mobile'] ) ) {
			$css->start_media_query( generate_get_media_query( 'mobile' ) );

			$css->set_selector( ':root' );

			foreach ( (array) $variables['mobile'] as $property => $value ) {
				$css->add_property( '--' . $property, $value );
			}

			$css->stop_media_query();
		}

		return $css->css_output();
	}
}

GeneratePress_CSS_Variables::get_instance()->init();
